# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$directory$vcsh$fossil_branch$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$pijul_channel$docker_context$package$bun$c$cmake$cobol$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$golang$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$opa$perl$php$pulumi$purescript$python$raku$rlang$red$ruby$rust$scala$solidity$swift$terraform$vlang$vagrant$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage$aws$gcloud$openstack$azure$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character
"$schema" = "https://starship.rs/config-schema.json"
format = "$all"
right_format = ""
continuation_prompt = "[ΓêÖ](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = true

[palettes]

[profiles]

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = "Γÿü∩╕Å  "
style = "bold yellow"
disabled = false
expiration_symbol = "X"
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[azure]
format = "on [$symbol($subscription)]($style) "
symbol = "≤░áà "
style = "blue bold"
disabled = true

[azure.subscription_aliases]

[battery]
full_symbol = "≤░ü╣ "
charging_symbol = "≤░éä "
discharging_symbol = "≤░éâ "
unknown_symbol = "≤░ü╜ "
empty_symbol = "≤░éÄ "
disabled = false
format = "[$symbol$percentage]($style) "

[[battery.display]]
threshold = 10
style = "red bold"

[buf]
format = "with [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÉâ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["buf.yaml", "buf.gen.yaml", "buf.work.yaml"]
detect_folders = []

[bun]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒì₧ "
style = "bold red"
disabled = false
detect_extensions = []
detect_files = ["bun.lockb", "bunfig.toml"]
detect_folders = []

[c]
format = "via [$symbol($version(-$name) )]($style)"
version_format = "v${raw}"
style = "149 bold"
symbol = "C "
disabled = false
detect_extensions = ["c", "h"]
detect_files = []
detect_folders = []
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]

[character]
format = "$symbol "
success_symbol = "[Γ¥»](bold green)"
error_symbol = "[Γ¥»](bold red)"
vimcmd_symbol = "[Γ¥«](bold green)"
vimcmd_visual_symbol = "[Γ¥«](bold yellow)"
vimcmd_replace_symbol = "[Γ¥«](bold purple)"
vimcmd_replace_one_symbol = "[Γ¥«](bold purple)"
disabled = false

[cmake]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "Γû│ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []

[cmd_duration]
min_time = 2000
format = "took [$duration]($style) "
style = "yellow bold"
show_milliseconds = false
disabled = false
show_notifications = false
min_time_to_notify = 45000

[cobol]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ΓÜÖ∩╕Å "
style = "bold blue"
disabled = false
detect_extensions = ["cbl", "cob", "CBL", "COB"]
detect_files = []
detect_folders = []

[conda]
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "≡ƒàÆ "
style = "green bold"
ignore_base = true
disabled = false

[container]
format = '[$symbol \[$name\]]($style) '
symbol = "Γ¼ó"
style = "red bold dimmed"
disabled = false

[crystal]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒö« "
style = "bold red"
disabled = false
detect_extensions = ["cr"]
detect_files = ["shard.yml"]
detect_folders = []

[daml]
symbol = "╬¢ "
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
style = "bold cyan"
disabled = false
detect_extensions = []
detect_files = ["daml.yaml"]
detect_folders = []

[dart]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÄ» "
style = "bold blue"
disabled = false
detect_extensions = ["dart"]
detect_files = ["pubspec.yaml", "pubspec.yml", "pubspec.lock"]
detect_folders = [".dart_tool"]

[deno]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒªò "
style = "green bold"
disabled = false
detect_extensions = []
detect_files = [
    "deno.json",
    "deno.jsonc",
    "mod.ts",
    "deps.ts",
    "mod.js",
    "deps.js",
]
detect_folders = []

[directory]
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
disabled = false
read_only = "≡ƒöÆ"
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true

[directory.substitutions]

[docker_context]
symbol = "≡ƒÉ│ "
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
disabled = false
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[dotnet]
format = "via [$symbol($version )(≡ƒÄ» $tfm )]($style)"
version_format = "v${raw}"
symbol = ".NET "
style = "blue bold"
heuristic = true
disabled = false
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = [
    "global.json",
    "project.json",
    "Directory.Build.props",
    "Directory.Build.targets",
    "Packages.props",
]
detect_folders = []

[elixir]
format = 'via [$symbol($version \(OTP $otp_version\) )]($style)'
version_format = "v${raw}"
symbol = "≡ƒÆº "
style = "bold purple"
disabled = false
detect_extensions = []
detect_files = ["mix.exs"]
detect_folders = []

[elm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒî│ "
style = "cyan bold"
disabled = false
detect_extensions = ["elm"]
detect_files = ["elm.json", "elm-package.json", ".elm-version"]
detect_folders = ["elm-stuff"]

[env_var]

[erlang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ε₧▒ "
style = "bold red"
disabled = false
detect_extensions = []
detect_files = ["rebar.config", "erlang.mk"]
detect_folders = []

[fennel]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒºà "
style = "bold green"
disabled = true
detect_extensions = ["fnl"]
detect_files = []
detect_folders = []

[fill]
style = "bold black"
symbol = "."
disabled = false

[fossil_branch]
format = "on [$symbol$branch]($style) "
symbol = "εéá "
style = "bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "ΓÇª"
disabled = true

[gcloud]
format = 'on [$symbol$account(@$domain)(\($region\))]($style) '
symbol = "Γÿü∩╕Å  "
style = "bold blue"
disabled = false
detect_env_vars = []

[gcloud.region_aliases]

[gcloud.project_aliases]

[git_branch]
format = "on [$symbol$branch(:$remote_branch)]($style) "
symbol = "εéá "
style = "bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "ΓÇª"
only_attached = false
always_show_remote = false
ignore_branches = []
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = "green bold"
only_detached = true
disabled = false
tag_symbol = " ≡ƒÅ╖  "
tag_disabled = true
tag_max_candidates = 0

[git_metrics]
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
disabled = true
ignore_submodules = false

[git_state]
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "red bold"
stashed = '\$'
ahead = "Γçí"
behind = "Γçú"
up_to_date = ""
diverged = "Γçò"
conflicted = "="
deleted = "Γ£ÿ"
renamed = "┬╗"
modified = "!"
staged = "+"
untracked = "?"
typechanged = ""
ignore_submodules = false
disabled = false

[golang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÉ╣ "
style = "bold cyan"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
    "go.mod",
    "go.sum",
    "go.work",
    "glide.yaml",
    "Gopkg.yml",
    "Gopkg.lock",
    ".go-version",
]
detect_folders = ["Godeps"]

[gradle]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒà╢ "
style = "bold bright-cyan"
disabled = false
recursive = false
detect_extensions = ["gradle", "gradle.kts"]
detect_files = []
detect_folders = ["gradle"]

[guix_shell]
format = "via [$symbol]($style) "
symbol = "≡ƒÉâ "
style = "yellow bold"
disabled = false

[haskell]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "╬╗ "
style = "bold purple"
disabled = false
detect_extensions = ["hs", "cabal", "hs-boot"]
detect_files = ["stack.yaml", "cabal.project"]
detect_folders = []

[haxe]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "Γîÿ "
style = "bold fg:202"
disabled = false
detect_extensions = ["hx", "hxml"]
detect_files = ["haxelib.json", "hxformat.json", ".haxerc"]
detect_folders = [".haxelib", "haxe_libraries"]

[helm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ΓÄê "
style = "bold white"
disabled = false
detect_extensions = []
detect_files = ["helmfile.yaml", "Chart.yaml"]
detect_folders = []

[hg_branch]
symbol = "εéá "
style = "bold purple"
format = "on [$symbol$branch(:$topic)]($style) "
truncation_length = 9223372036854775807
truncation_symbol = "ΓÇª"
disabled = true

[hostname]
ssh_only = true
ssh_symbol = "≡ƒîÉ "
trim_at = "."
format = "[$ssh_symbol$hostname]($style) in "
style = "green dimmed bold"
disabled = false

[java]
disabled = false
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
style = "red dimmed"
symbol = "Γÿò "
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]
detect_files = [
    "pom.xml",
    "build.gradle.kts",
    "build.sbt",
    ".java-version",
    "deps.edn",
    "project.clj",
    "build.boot",
    ".sdkmanrc",
]
detect_folders = []

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = "[$symbol$number]($style) "
symbol = "Γ£ª"
style = "bold blue"
disabled = false

[julia]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "α«â "
style = "bold purple"
disabled = false
detect_extensions = ["jl"]
detect_files = ["Project.toml", "Manifest.toml"]
detect_folders = []

[kotlin]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒà║ "
style = "bold blue"
kotlin_binary = "kotlin"
disabled = false
detect_extensions = ["kt", "kts"]
detect_files = []
detect_folders = []

[kubernetes]
symbol = "Γÿ╕ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
disabled = true
detect_extensions = []
detect_files = []
detect_folders = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

[line_break]
disabled = false

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "yellow bold"
disabled = true

[lua]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒîÖ "
style = "bold blue"
lua_binary = "lua"
disabled = false
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]

[memory_usage]
threshold = 75
format = "via $symbol[$ram( | $swap)]($style) "
style = "white bold dimmed"
symbol = "≡ƒÉÅ "
disabled = true

[meson]
truncation_length = 4294967295
truncation_symbol = "ΓÇª"
format = "via [$symbol$project]($style) "
symbol = "Γ¼ó "
style = "blue bold"
disabled = false

[nim]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒææ "
style = "yellow bold"
disabled = false
detect_extensions = ["nim", "nims", "nimble"]
detect_files = ["nim.cfg"]
detect_folders = []

[nix_shell]
format = 'via [$symbol$state( \($name\))]($style) '
symbol = "Γ¥ä∩╕Å  "
style = "bold blue"
impure_msg = "impure"
pure_msg = "pure"
unknown_msg = ""
disabled = false
heuristic = false

[nodejs]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ε£ÿ "
style = "bold green"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]

[ocaml]
format = 'via [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
version_format = "v${raw}"
global_switch_indicator = ""
local_switch_indicator = "*"
symbol = "≡ƒÉ½ "
style = "bold yellow"
disabled = false
detect_extensions = ["opam", "ml", "mli", "re", "rei"]
detect_files = ["dune", "dune-project", "jbuild", "jbuild-ignore", ".merlin"]
detect_folders = ["_opam", "esy.lock"]

[opa]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒ¬û  "
style = "bold blue"
disabled = false
detect_extensions = ["rego"]
detect_files = []
detect_folders = []

[openstack]
format = 'on [$symbol$cloud(\($project\))]($style) '
symbol = "Γÿü∩╕Å  "
style = "bold yellow"
disabled = false

[os]
format = "[$symbol]($style)"
style = "bold white"
disabled = true

[os.symbols]
Alpaquita = "≡ƒöö "
Alpine = "≡ƒÅö∩╕Å "
Amazon = "≡ƒÖé "
Android = "≡ƒñû "
Arch = "≡ƒÄù∩╕Å "
Artix = "≡ƒÄù∩╕Å "
CentOS = "≡ƒÆá "
Debian = "≡ƒîÇ "
DragonFly = "≡ƒÉë "
Emscripten = "≡ƒöù "
EndeavourOS = "≡ƒÜÇ "
Fedora = "≡ƒÄ⌐ "
FreeBSD = "≡ƒÿê "
Garuda = "≡ƒªà "
Gentoo = "≡ƒù£∩╕Å "
HardenedBSD = "≡ƒ¢í∩╕Å "
Illumos = "≡ƒÉª "
Linux = "≡ƒÉº "
Mabox = "≡ƒôª "
Macos = "≡ƒìÄ "
Manjaro = "≡ƒÑ¡ "
Mariner = "≡ƒîè "
MidnightBSD = "≡ƒîÿ "
Mint = "≡ƒî┐ "
NetBSD = "≡ƒÜ⌐ "
NixOS = "Γ¥ä∩╕Å "
OpenBSD = "≡ƒÉí "
OpenCloudOS = "Γÿü∩╕Å "
openEuler = "≡ƒªë "
openSUSE = "≡ƒªÄ "
OracleLinux = "≡ƒª┤ "
Pop = "≡ƒì¡ "
Raspbian = "≡ƒìô "
Redhat = "≡ƒÄ⌐ "
RedHatEnterprise = "≡ƒÄ⌐ "
Redox = "≡ƒº¬ "
Solus = "Γ¢╡ "
SUSE = "≡ƒªÄ "
Ubuntu = "≡ƒÄ» "
Unknown = "Γ¥ô "
Windows = "≡ƒ¬ƒ "

[package]
format = "is [$symbol$version]($style) "
symbol = "≡ƒôª "
style = "208 bold"
display_private = false
disabled = false
version_format = "v${raw}"

[perl]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÉ¬ "
style = "149 bold"
disabled = false
detect_extensions = ["pl", "pm", "pod"]
detect_files = [
    "Makefile.PL",
    "Build.PL",
    "cpanfile",
    "cpanfile.snapshot",
    "META.json",
    "META.yml",
    ".perl-version",
]
detect_folders = []

[php]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÉÿ "
style = "147 bold"
disabled = false
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]
detect_folders = []

[pijul_channel]
symbol = "εéá "
style = "bold purple"
format = "on [$symbol$channel]($style) "
truncation_length = 9223372036854775807
truncation_symbol = "ΓÇª"
disabled = true

[pulumi]
format = "via [$symbol($username@)$stack]($style) "
version_format = "v${raw}"
symbol = "∩å▓ "
style = "bold 5"
disabled = false
search_upwards = true

[purescript]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "<=> "
style = "bold white"
disabled = false
detect_extensions = ["purs"]
detect_files = ["spago.dhall"]
detect_folders = []

[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = "v${raw}"
style = "yellow bold"
symbol = "≡ƒÉì "
disabled = false
detect_extensions = ["py"]
detect_files = [
    "requirements.txt",
    ".python-version",
    "pyproject.toml",
    "Pipfile",
    "tox.ini",
    "setup.py",
    "__init__.py",
]
detect_folders = []

[raku]
format = "via [$symbol($version-$vm_version )]($style)"
version_format = "${raw}"
symbol = "≡ƒªï "
style = "149 bold"
disabled = false
detect_extensions = ["p6", "pm6", "pod6", "raku", "rakumod"]
detect_files = ["META6.json"]
detect_folders = []

[red]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒö║ "
style = "red bold"
disabled = false
detect_extensions = ["red", "reds"]
detect_files = []
detect_folders = []

[rlang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
style = "blue bold"
symbol = "≡ƒôÉ "
disabled = false
detect_extensions = ["R", "Rd", "Rmd", "Rproj", "Rsx"]
detect_files = [".Rprofile"]
detect_folders = [".Rproj.user"]

[ruby]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÆÄ "
style = "bold red"
disabled = false
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []
detect_variables = ["RUBY_VERSION", "RBENV_VERSION"]

[rust]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒªÇ "
style = "bold red"
disabled = false
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[scala]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
disabled = false
style = "red bold"
symbol = "≡ƒåé "
detect_extensions = ["sbt", "scala"]
detect_files = [".scalaenv", ".sbtenv", "build.sbt"]
detect_folders = [".metals"]

[shell]
format = "[$indicator]($style) "
bash_indicator = "bsh"
fish_indicator = "fsh"
zsh_indicator = "zsh"
powershell_indicator = "psh"
ion_indicator = "ion"
elvish_indicator = "esh"
tcsh_indicator = "tsh"
nu_indicator = "nu"
xonsh_indicator = "xsh"
cmd_indicator = "cmd"
unknown_indicator = ""
style = "white bold"
disabled = true

[shlvl]
threshold = 2
format = "[$symbol$shlvl]($style) "
symbol = "Γåò∩╕Å  "
repeat = false
repeat_offset = 0
style = "bold yellow"
disabled = true

[singularity]
symbol = ""
format = '[$symbol\[$env\]]($style) '
style = "blue bold dimmed"
disabled = false

[solidity]
format = "via [$symbol($version)]($style)"
version_format = "v${major}.${minor}.${patch}"
disabled = false
style = "bold blue"
symbol = "S "
compiler = ["solc"]
detect_extensions = ["sol"]
detect_files = []
detect_folders = []

[spack]
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "≡ƒàó "
style = "blue bold"
disabled = false

[status]
format = "[$symbol$status]($style) "
symbol = "Γ¥î"
success_symbol = ""
not_executable_symbol = "≡ƒÜ½"
not_found_symbol = "≡ƒöì"
sigint_symbol = "≡ƒº▒"
signal_symbol = "ΓÜí"
style = "bold red"
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = "|"
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[sudo]
format = "[as $symbol]($style)"
symbol = "≡ƒºÖ "
style = "bold blue"
allow_windows = false
disabled = true

[swift]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "≡ƒÉª "
style = "bold 202"
disabled = false
detect_extensions = ["swift"]
detect_files = ["Package.swift"]
detect_folders = []

[terraform]
format = "via [$symbol$workspace]($style) "
version_format = "v${raw}"
symbol = "≡ƒÆá "
style = "bold 105"
disabled = false
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []
detect_folders = [".terraform"]

[time]
format = "at [$time]($style) "
style = "bold yellow"
use_12hr = false
disabled = true
utc_time_offset = "local"
time_range = "-"

[username]
format = "[$user]($style) in "
style_root = "red bold"
style_user = "yellow bold"
show_always = false
disabled = false

[vagrant]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "Γì▒ "
style = "cyan bold"
disabled = false
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []

[vcsh]
symbol = ""
style = "bold yellow"
format = "vcsh [$symbol$repo]($style) "
disabled = false

[vlang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "V "
style = "blue bold"
disabled = false
detect_extensions = ["v"]
detect_files = ["v.mod", "vpkg.json", ".vpkg-lock.json"]
detect_folders = []

[zig]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "Γå» "
style = "bold yellow"
disabled = false
detect_extensions = ["zig"]
detect_files = []
detect_folders = []

[custom]
